<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="vs.cm.cm_001_1.mapper.AlMapper">


<resultMap type="AlVO" id="requestVO">
	<result property="rn" column="rn"/>
	<result property="tablename" column="tablename"/>
	<result property="title" column="title"/>
	<result property="good" column="good"/>
	<result property="see" column="see"/>
	<result property="registdate" column="registdate"/>
	<result property="m_index" column="m_index"/>
	<result property="t_index" column="t_index"/>	
</resultMap>

<sql id="Page_DTO">
		<trim prefix="(" suffix=") and" prefixOverrides="and">
			<foreach item='type' collection="typeArr">
				<trim prefix="and">
					<choose>
						<when test="type == '육상'.toString()">
							co_b_type like '%'||'육상'||'%'
						</when>
						<when test="type == '자전거'.toString()">
							co_b_type like '%'||'자전거'||'%'
						</when>
						<!-- 
						<when test="type == '운동복'.toString()">
							li_category like '%'||'운동복'||'%'
						</when>
						<when test="type == '안전장비'.toString()">
							li_category like '%'||'안전장비'||'%'
						</when>
						<when test="type == '신발'.toString()">
							li_category like '%'||'신발'||'%'
						</when>
						<when test="type == '기타'.toString()">
							li_category like '%'||'기타'||'%'
						</when>
						 -->
						<when test="search_filter == 'all'.toString()">
								co_b_title like '%'||#{input_text}||'%') or (co_b_text like '%'||#{input_text}||'%'
						</when>
						<when test="search_filter == '내용'.toString()">
							co_b_text like '%'||#{input_text}||'%'
						</when>
						<when test="search_filter == '장소'.toString()">
							co_b_area like '%'||#{input_text}||'%'
						</when>
						<otherwise>
							co_b_title like '%'||#{input_text}||'%'
						</otherwise>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>
	
<select id="al_list" resultMap="requestVO">
<![CDATA[ 
           select 
              rn, tablename, title, good, see, registdate, m_index, t_index
              from
                 (select rownum rn, tablename, title, good, see, registdate, m_index, t_index
                 from
                    (
                    select tablename, title, good, see, registdate, m_index, t_index
                       from
                       (
                       select 
                          'course' tablename, lc_title as title, lc_good as good, lc_see as see, 
                          lc_date as registdate, m_index, lc_index as t_index
                       from 
                          course
                       
                       union all
                       
                       select 
                          'item' tablename, li_title as title, li_good as good, li_see as see, 
                          li_date as registdate, m_index, li_index as t_index
                       from item
                       
                       union all
                       
                       select 
                          'myrecord' tablename, pr_title as title, pr_good as good, pr_see as see, 
                          pr_resistdate as registdate, m_index, pr_index as t_index
                       from myrecord
                       where pr_public = '1'
                       union all
                       
                       select 
                          'competition_review' tablename, co_r_title as title, co_r_good as good, 
                          co_r_see as see, co_r_day as registdate, m_index, co_r_index as t_index
                       from competition_review
                       
                       union all
                    
                       select 
                          'trainning' tablename,lt_title as title, lt_good as good, lt_see as see, 
                          lt_date as registdate, m_index, lt_index as t_index
                       from trainning
                       )
                 
                    order by registdate desc
                    )
              where rownum <= (#{page} * #{amount})
             )
           where rn > ((#{page}-1) * #{amount})
           ]]>
</select>    
    
    
<select id="re_list" resultType="vs.re.re_001_1.vo.ReVO">
<![CDATA[ 
	select de_index, m_index, m_index2, de_target, de_type,
			de_dispose, de_date, board_index
	from (
		select rownum rn,a.*
		from
			(select d.de_index, d.m_index, d.m_index2, d.de_target, 
					d.de_type,d.de_dispose, d.de_date,d.board_index
			 from declaration d
			where
			]]>
			    <include refid="Page_DTO"/>
			<![CDATA[ 
			de_index > '0'
			order by to_number(substr(de_index, 4)) desc
			)a
		where rownum <= (#{page} * ${amount})
		)
	where rn > ((#{page}-1) * ${amount})
]]>

</select>

<update id="disposechange" parameterType="String">
	update declaration
		set de_dispose = case
		when de_dispose = '처리대기' then '경고'
		when de_dispose = '경고' then '삭제처리'
		when de_dispose = '삭제처리' then '처리대기'
		else de_dispose end
		where board_index = #{board_index}
</update>    
 <!-- 게시물 총합 출력 쿼리 -->
	<select id="get_total" resultType="int">
		select count(de_index)
		 from declaration
	

	</select>   

<select id="get_total1" resultType="int">

	select count(*)
                 from
                 (
                    select m_index
                    from course
                    union all
                    select m_index
                    from item
                    union all
                    select m_index
                    from myrecord
                    union all
                    select m_index
                    from competition_review
                    union all
                    select m_index
                    from trainning
                 )
</select>


</mapper>
    
    
   