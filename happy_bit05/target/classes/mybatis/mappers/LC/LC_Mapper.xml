<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="lc">
	
	<resultMap type="LC_003_1_VO" id="lc_getResult">
		<result property="lc_index" column="lc_index"/>
		<result property="m_index" column="m_index"/>
		<result property="lc_title" column="lc_title"/>
		<result property="lc_type" column="lc_type"/>
		<result property="lc_distance" column="lc_distance"/>
		<result property="lc_run" column="lc_run"/>
		<result property="lc_cycle" column="lc_cycle"/>
		<result property="lc_area1" column="lc_area1"/>
		<result property="lc_area2" column="lc_area2"/>
		<result property="lc_area3" column="lc_area3"/>
		<result property="lc_text" column="lc_text" jdbcType="CLOB" javaType="java.lang.String"/>
		<result property="lc_date" column="lc_date"/>
		<result property="lc_good" column="lc_good"/>
		<result property="lc_see" column="lc_see"/>
		<result property="lc_record" column="lc_record"/>
		<result property="lc_address" column="lc_address"/>
		<result property="lc_xy_arr" column="lc_xy_arr" jdbcType="CLOB" javaType="java.lang.String"/>
	</resultMap>
	
	<resultMap id="clobMap" type="java.util.HashMap">
		<result property="lc_thumbnail" column="lc_thumbnail" javaType="[B" jdbcType="BLOB"  />
	</resultMap>
	
		<!-- 검색하기 -->
	<sql id="criteria" >
		<trim prefix="(" suffix=") AND " prefixOverrides="OR">
				<foreach item="type" collection="typeArr">
					<trim prefix="OR">
						<choose>
							<when test = "type == 'normal'.toString()">
								lc_title like '%'||#{keyword}||'%') or (m_index like '%'||#{keyword}||'%'
							</when>
							<when test = "type == 'area'.toString()">
								lc_area1 like '%'||#{keyword}||'%') or (lc_area2 like '%'||#{keyword}||'%') or
								(lc_area3 like '%'||#{keyword}||'%'
							</when>
						</choose>
					</trim>
				</foreach>
			</trim>
	</sql>
	
	
	<!-- 리스트 뽑아오기 -->
	<select id="LC_002_01" resultType="vs.lc.lc_002_1.vo.LC_002_1_VO">
		<![CDATA[
			select lc_index, m_index, lc_title, lc_type, lc_distance, lc_run, lc_cycle,
						 lc_area1, lc_area2, lc_area3, lc_thumbnail, lc_text, lc_date, lc_good, lc_see, lc_record
			from
				(
					select /*+INDEX_DESC(course lc_index) */
						rownum rn, lc_index, m_index, lc_title, lc_type, lc_distance, lc_run, lc_cycle,
						 lc_area1, lc_area2, lc_area3, lc_thumbnail, lc_text, lc_date, lc_good, lc_see, lc_record
					from
						course
					where
		]]>	
		
			<trim prefix="(" suffix=") AND " prefixOverrides="OR">
				<foreach item="type" collection="typeArr">
					<trim prefix="OR">
						<choose>
							<when test = "type == 'normal'.toString()">
								lc_title like '%'||#{keyword}||'%') or (m_index like '%'||#{keyword}||'%'
							</when>
							<when test = "type == 'area'.toString()">
								lc_area1 like '%'||#{keyword}||'%') or (lc_area2 like '%'||#{keyword}||'%') or
								(lc_area3 like '%'||#{keyword}||'%'
							</when>
						</choose>
					</trim>
				</foreach>
			</trim>
			
		<![CDATA[
					rownum <= #{pageNum} * #{amount}
				)
				where rn > (#{pageNum} -1) * #{amount}
		]]>
	</select>
	
	<!-- 게시글 갯수 세기 -->
	<select id="getTotalCount" resultType="int">
		select count(*) from course where 
			<include refid="criteria"></include>
		lc_index like 'lc_%'
	</select>
	
	<!-- 좋아요 많은 순서대로 가져오기 -->
	<select id="LC_002_01_good" resultType="vs.lc.lc_002_1.vo.LC_002_1_VO">
		<![CDATA[
			select * from(
				select *
				from course
				where
		]]>
				<include refid="criteria"></include>
		<![CDATA[
				lc_index like 'lc_%'
				order by lc_good desc
			)	
			where rownum <= 4
		]]>
	</select>

	<!-- 게시글 업로드 -->
	<insert id="lc_001_01">
		<![CDATA[   
		insert into course(lc_index, m_index, lc_title, lc_type, lc_distance, lc_run, lc_cycle, lc_area1,
			lc_area2, lc_area3, lc_text, lc_date, lc_good, lc_see, lc_record)
		values('lc_'||seq_course.nextval, #{m_index}, #{lc_title}, #{lc_type}, #{lc_distance}, #{lc_run},
			#{lc_cycle}, #{lc_area1}, #{lc_area2}, #{lc_area3}, #{lc_text}, sysdate, 0, 0, 0)
			]]>
	</insert> 
	
	<!-- 지도 업로드 -->
	<insert id="lc_001_01_map">
		<selectKey keyProperty="lc_index" order="BEFORE" resultType="String">
		<![CDATA[ 
			select max(lc_index) from course
		]]>	
		</selectKey>
		
		insert into map values(
			#{lc_index}, #{lc_address}, #{lc_xy_arr})
	</insert>
	
	<!-- 썸네일 업로드 -->
	<update id="lc_001_01_thumbnail" parameterType="java.util.Map">
		<selectKey keyProperty="lc_index2" order="BEFORE" resultType="String">
			<![CDATA[ 
				select max(lc_index) from course
			]]>	
		</selectKey>
		
		update course
		set lc_thumbnail = #{lc_thumbnail}
		where lc_index = #{lc_index2}
	</update>
	

		
	<select id="LC_003_01" resultMap="lc_getResult">
		<![CDATA[
			select * from course a join map b 
				on b.lc_index = a.lc_index
				where b.lc_index = #{lc_index}
		]]>	
	</select>
	
</mapper>